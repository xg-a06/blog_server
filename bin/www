#!/usr/bin/env node
/*
 * @Description:
 * @Author: xg-a06
 * @Date: 2019-04-27 07:10:27
 * @LastEditTime: 2019-06-10 15:47:29
 * @LastEditors: xg-a06
 */

const http = require('http')
const { debugLog, debugError } = require('../src/utils/log')
const config = require('../src/config')
const app = require('../src/app')

const server = http.createServer(app.callback())

server.listen(config.PORT)
server.on('error', onError)
server.on('listening', onListening)

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error
  }

  let bind = 'Port ' + port

  switch (error.code) {
    case 'EACCES':
      debugError(bind + ' requires elevated privileges')
      process.exit(1)
      break
    case 'EADDRINUSE':
      debugError(bind + ' is already in use')
      process.exit(1)
      break
    default:
      throw error
  }
}

function onListening() {
  let addr = server.address()
  let bind = 'port ' + addr.port
  debugLog('Listening on ' + bind)
}
